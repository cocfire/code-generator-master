#set ( $sys = ${system} )
#set ( $dp = ${dynamicPath} )
#set ( $tpl = ${template} )
#set ( $package = ${sys.config.get("generator.package")} )
#set ( $className = ${dp.className} )
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.database.dao.${className}Dao">

    #set ( $sort = "" )
    #set ( $order = "" )
    <resultMap id="resultBean" type="${package}.database.model.${className}"></resultMap>
    <parameterMap id="parameterBean"  type="${package}.database.model.${className}"></parameterMap>
    <sql id="tableName">`${tableName}`</sql>
    <sql id="columns"><trim suffixOverrides=",">#foreach($column in $table.columns)`$column.columnName`,#end</trim></sql>

    <sql id="where">
        <where>
#foreach($column in $table.columns)
            <if test='$column.attributeName != null and ${column.attributeName.trim()}.toString() != "" '>and `$column.columnName` = #{$column.attributeName}</if>
#end
#foreach($column in $table.columns)
#if($column.attributeType=='String')
            <if test='${column.attributeName}Like != null and ${column.attributeName}Like.trim() != ""'>and `$column.columnName` like
                CONCAT('%', #{${column.attributeName}Like}, '%')
            </if>
#end
#end
        </where>
    </sql>

    <sql id="columnsNotNull">
        <trim suffixOverrides=",">
#foreach($column in $table.columns)
            <if test="$column.attributeName != null">`$column.columnName`,</if>
#end
        </trim>
    </sql>
    <sql id="value">
        <trim suffixOverrides=",">
#foreach($column in $table.columns)
            <if test="$column.attributeName != null">#{$column.attributeName},</if>
#end
        </trim>
    </sql>
    <sql id="set">
        <set>
#foreach($column in $table.columns)
#if($column.columnName != "id")
            <if test="$column.attributeName != null">`$column.columnName` = #{$column.attributeName},</if>
#end
#end
        </set>
    </sql>


    <select id="select" resultMap="resultBean">
        select <include refid="columns"></include> from <include refid="tableName"></include>
        <include refid="where"></include>
        <if  test="sort != null and sort.trim() != ''">
            order by \${sort} \${order}
        </if>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="selectCount" resultType="int">
        select count(*) from <include refid="tableName"></include>
        <include refid="where"></include>
    </select>

    <select id="selectById" resultMap="resultBean">
        select <include refid="columns"></include> from <include refid="tableName"></include> where id = #{value}
    </select>

    <insert id="insert" parameterMap="parameterBean" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="tableName"></include>
        (<include refid="columnsNotNull"></include>)
        values (<include refid="value"></include>)
    </insert>

    <update id="update" parameterMap="parameterBean">
        update <include refid="tableName"></include>
        <include refid="set"></include>
        where `id` = #{id}
    </update>

    <delete id="delete">
        delete from <include refid="tableName"></include> where `id` = #{value}
    </delete>
</mapper>